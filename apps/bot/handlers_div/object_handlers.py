"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞–º–∏."""

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from core.logging.logger import logger
from apps.bot.services.object_service import ObjectService
from core.state import user_state_manager, UserAction, UserStep

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
object_service = ObjectService()


async def _handle_manage_objects(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞–º–∏."""
    query = update.callback_query
    user_id = query.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_objects = object_service.get_user_objects(user_id)
    
    if not user_objects:
        await query.edit_message_text(
            text="üìã <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞–º–∏</b>\n\n‚ùå –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤.\n\n–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –æ–±—ä–µ–∫—Ç —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            parse_mode='HTML',
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
            ]])
        )
        return
    
    keyboard = []
    for obj in user_objects:
        # –¢–µ–ø–µ—Ä—å max_distance_meters —É–∂–µ –µ—Å—Ç—å –≤ –¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞
        max_distance = obj.get('max_distance_meters', 500)
        auto_close_minutes = obj.get('auto_close_minutes', 60)
            
        keyboard.append([
            InlineKeyboardButton(
                f"‚öôÔ∏è {obj['name']} ({max_distance}–º, {auto_close_minutes} –º–∏–Ω.)", 
                callback_data=f"edit_object:{obj['id']}"
            )
        ])
    
    keyboard.append([
        InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    ])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text="üìã <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞–º–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n\nüí° –í —Å–∫–æ–±–∫–∞—Ö —É–∫–∞–∑–∞–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏ –≤—Ä–µ–º—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–º–µ–Ω",
        parse_mode='HTML',
        reply_markup=reply_markup
    )


async def _handle_edit_object(update: Update, context: ContextTypes.DEFAULT_TYPE, object_id: int):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞."""
    query = update.callback_query
    user_id = query.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—ä–µ–∫—Ç–µ
    obj_data = object_service.get_object_by_id(object_id)
    if not obj_data:
        await query.edit_message_text(
            text="‚ùå –û–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            parse_mode='HTML',
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
            ]])
        )
        return
    
    # –¢–µ–ø–µ—Ä—å max_distance_meters —É–∂–µ –µ—Å—Ç—å –≤ obj_data
    max_distance = obj_data.get('max_distance_meters', 500)
    auto_close_minutes = obj_data.get('auto_close_minutes', 60)
    
    keyboard = [
        [
            InlineKeyboardButton("üìù –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_field:{object_id}:name"),
            InlineKeyboardButton("üìç –ê–¥—Ä–µ—Å", callback_data=f"edit_field:{object_id}:address")
        ],
        [
            InlineKeyboardButton("üí∞ –ß–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞", callback_data=f"edit_field:{object_id}:hourly_rate"),
            InlineKeyboardButton("üìè –ú–∞–∫—Å. —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ", callback_data=f"edit_field:{object_id}:max_distance_meters")
        ],
        [
            InlineKeyboardButton("‚è∞ –ê–≤—Ç–æ-–∑–∞–∫—Ä—ã—Ç–∏–µ —Å–º–µ–Ω", callback_data=f"edit_field:{object_id}:auto_close_minutes")
        ],
        [
            InlineKeyboardButton("üïê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–π–º-—Å–ª–æ—Ç–∞–º–∏", callback_data=f"manage_timeslots:{object_id}")
        ],
        [
            InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="manage_objects"),
            InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text=f"‚öôÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞</b>\n\n"
             f"üè¢ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {obj_data['name']}\n"
             f"üìç <b>–ê–¥—Ä–µ—Å:</b> {obj_data['address'] or '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
             f"üí∞ <b>–ß–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞:</b> {obj_data['hourly_rate']}‚ÇΩ\n"
             f"üìè <b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</b> {max_distance}–º\n"
             f"‚è∞ <b>–í—Ä–µ–º—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è:</b> {auto_close_minutes} –º–∏–Ω.\n\n"
             f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
        parse_mode='HTML',
        reply_markup=reply_markup
    )


async def _handle_edit_field(update: Update, context: ContextTypes.DEFAULT_TYPE, object_id: int, field_name: str):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—è."""
    query = update.callback_query
    user_id = query.from_user.id
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è –∏ –ø–æ–¥—Å–∫–∞–∑–∫—É
    field_names = {
        'name': '–Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞',
        'address': '–∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞',
        'hourly_rate': '—á–∞—Å–æ–≤—É—é —Å—Ç–∞–≤–∫—É (–≤ —Ä—É–±–ª—è—Ö)',
        'max_distance_meters': '–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ (–≤ –º–µ—Ç—Ä–∞—Ö, –æ—Ç 10 –¥–æ 5000)',
        'auto_close_minutes': '–≤—Ä–µ–º—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–º–µ–Ω (–≤ –º–∏–Ω—É—Ç–∞—Ö, –æ—Ç 15 –¥–æ 480)'
    }
    
    field_display = field_names.get(field_name, field_name)
    
    # –°–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    user_state_manager.create_state(
        user_id=user_id,
        action=UserAction.EDIT_OBJECT,
        step=UserStep.INPUT_FIELD_VALUE,
        selected_object_id=object_id,
        data={'field_name': field_name}
    )
    
    await query.edit_message_text(
        text=f"‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—è</b>\n\n"
             f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—è <b>{field_display}</b>:",
        parse_mode='HTML',
        reply_markup=InlineKeyboardMarkup([[
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"edit_object:{object_id}")
        ]])
    )


async def _handle_edit_object_input(update: Update, context: ContextTypes.DEFAULT_TYPE, user_state):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—è –æ–±—ä–µ–∫—Ç–∞."""
    user_id = update.effective_user.id
    text = update.message.text
    object_id = user_state.selected_object_id
    field_name = user_state.data.get('field_name')
    
    if not field_name:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–µ –ø–æ–ª–µ.")
        user_state_manager.clear_state(user_id)
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ –æ–±—ä–µ–∫—Ç–∞
    result = object_service.update_object_field(object_id, field_name, text, user_id)
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_state_manager.clear_state(user_id)
    
    if result['success']:
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –æ–±—ä–µ–∫—Ç–∞
        await update.message.reply_text(
            f"‚úÖ {result['message']}\n\n–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <b>{result['new_value']}</b>",
            parse_mode='HTML'
        )
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—ä–µ–∫—Ç–µ
        await _show_updated_object_info(update, context, object_id)
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
        await update.message.reply_text(
            f"‚ùå {result['error']}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –æ–±—ä–µ–∫—Ç–∞.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîô –ö —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é", callback_data=f"edit_object:{object_id}"),
                InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
            ]])
        )


async def _show_updated_object_info(update: Update, context: ContextTypes.DEFAULT_TYPE, object_id: int):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—ä–µ–∫—Ç–µ."""
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—ä–µ–∫—Ç–µ
    obj_data = object_service.get_object_by_id(object_id)
    if not obj_data:
        await update.message.reply_text(
            "‚ùå –û–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
            ]])
        )
        return
    
    # –¢–µ–ø–µ—Ä—å max_distance_meters —É–∂–µ –µ—Å—Ç—å –≤ obj_data
    max_distance = obj_data.get('max_distance_meters', 500)
    auto_close_minutes = obj_data.get('auto_close_minutes', 60)
    
    keyboard = [
        [
            InlineKeyboardButton("üìù –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_field:{object_id}:name"),
            InlineKeyboardButton("üìç –ê–¥—Ä–µ—Å", callback_data=f"edit_field:{object_id}:address")
        ],
        [
            InlineKeyboardButton("üí∞ –ß–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞", callback_data=f"edit_field:{object_id}:hourly_rate"),
            InlineKeyboardButton("üìè –ú–∞–∫—Å. —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ", callback_data=f"edit_field:{object_id}:max_distance_meters")
        ],
        [
            InlineKeyboardButton("‚è∞ –ê–≤—Ç–æ-–∑–∞–∫—Ä—ã—Ç–∏–µ —Å–º–µ–Ω", callback_data=f"edit_field:{object_id}:auto_close_minutes")
        ],
        [
            InlineKeyboardButton("üïê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–π–º-—Å–ª–æ—Ç–∞–º–∏", callback_data=f"manage_timeslots:{object_id}")
        ],
        [
            InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="manage_objects"),
            InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        text=f"‚öôÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞</b>\n\n"
             f"üè¢ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {obj_data['name']}\n"
             f"üìç <b>–ê–¥—Ä–µ—Å:</b> {obj_data['address'] or '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
             f"üí∞ <b>–ß–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞:</b> {obj_data['hourly_rate']}‚ÇΩ\n"
             f"üìè <b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</b> {max_distance}–º\n"
             f"‚è∞ <b>–í—Ä–µ–º—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è:</b> {auto_close_minutes} –º–∏–Ω.\n\n"
             f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
        parse_mode='HTML',
        reply_markup=reply_markup
    )
