"""
–°–µ—Ä–≤–∏—Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å Telegram –±–æ—Ç–æ–º
"""

import httpx
import asyncio
from typing import Optional
from core.config.settings import settings
from core.logging.logger import logger


class BotIntegrationService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram –±–æ—Ç–æ–º"""
    
    def __init__(self):
        self.bot_token = getattr(settings, 'telegram_bot_token', None)
        self.bot_api_url = f"https://api.telegram.org/bot{self.bot_token}"
    
    async def send_pin_code(self, telegram_id: int, pin_code: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ PIN-–∫–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ –±–æ—Ç–∞"""
        if not self.bot_token:
            logger.error("Telegram bot token not configured")
            return False
        
        message = f"""
üîê <b>–ö–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ StaffProBot</b>

–í–∞—à PIN-–∫–æ–¥: <code>{pin_code}</code>

‚è∞ –ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 5 –º–∏–Ω—É—Ç
üåê –°–∞–π—Ç: http://localhost:8001

<i>–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –∫–æ–¥, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.</i>
"""
        
        try:
            async with httpx.AsyncClient() as client:
                response = await client.post(
                    f"{self.bot_api_url}/sendMessage",
                    json={
                        "chat_id": telegram_id,
                        "text": message,
                        "parse_mode": "HTML"
                    },
                    timeout=10.0
                )
                
                if response.status_code == 200:
                    logger.info(f"PIN code sent to user {telegram_id}")
                    return True
                else:
                    logger.error(f"Failed to send PIN code to user {telegram_id}: {response.text}")
                    return False
                    
        except Exception as e:
            logger.error(f"Error sending PIN code to user {telegram_id}: {e}")
            return False
    
    async def send_notification(self, telegram_id: int, message: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ –±–æ—Ç–∞"""
        if not self.bot_token:
            logger.error("Telegram bot token not configured")
            return False
        
        try:
            async with httpx.AsyncClient() as client:
                response = await client.post(
                    f"{self.bot_api_url}/sendMessage",
                    json={
                        "chat_id": telegram_id,
                        "text": message,
                        "parse_mode": "HTML"
                    },
                    timeout=10.0
                )
                
                if response.status_code == 200:
                    logger.info(f"Notification sent to user {telegram_id}")
                    return True
                else:
                    logger.error(f"Failed to send notification to user {telegram_id}: {response.text}")
                    return False
                    
        except Exception as e:
            logger.error(f"Error sending notification to user {telegram_id}: {e}")
            return False
