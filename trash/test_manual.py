#!/usr/bin/env python3
"""
–†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–µ—Ä–≤–µ—Ä–∞
"""

import requests
import json

BASE_URL = "http://localhost:8000"

def test_manual():
    """–†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API."""
    print("üîç –†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–µ—Ä–≤–µ—Ä–∞...")
    
    # 1. Health check
    print("\n1Ô∏è‚É£ Health check:")
    try:
        response = requests.get(f"{BASE_URL}/health")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 2. –ö–æ—Ä–Ω–µ–≤–æ–π endpoint
    print("\n2Ô∏è‚É£ –ö–æ—Ä–Ω–µ–≤–æ–π endpoint:")
    try:
        response = requests.get(f"{BASE_URL}/")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 3. –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
    print("\n3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞:")
    object_data = {
        "name": "–ù–æ–≤—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –æ–±—ä–µ–∫—Ç",
        "owner_id": 2,
        "address": "—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 100",
        "coordinates": "55.7558,37.6176",
        "opening_time": "08:00:00",
        "closing_time": "22:00:00",
        "hourly_rate": 750.00,
        "required_employees": "–û—Ö—Ä–∞–Ω–Ω–∏–∫, –º–µ–Ω–µ–¥–∂–µ—Ä",
        "is_active": True
    }
    
    try:
        response = requests.post(f"{BASE_URL}/api/v1/objects", json=object_data)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤
    print("\n4Ô∏è‚É£ –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤:")
    try:
        response = requests.get(f"{BASE_URL}/api/v1/objects")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        data = response.json()
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {data.get('count', 0)}")
        if data.get('objects'):
            for obj in data['objects']:
                print(f"   - {obj['name']} (ID: {obj['id']}, –∞–¥—Ä–µ—Å: {obj['address']})")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 5. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n5Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    user_data = {
        "telegram_id": 111222333,
        "username": "test_employee",
        "first_name": "–ò–≤–∞–Ω",
        "last_name": "–ò–≤–∞–Ω–æ–≤",
        "phone": "+79005554433",
        "role": "employee",
        "is_active": True
    }
    
    try:
        response = requests.post(f"{BASE_URL}/api/v1/users", json=user_data)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 6. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\n6Ô∏è‚É£ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    try:
        response = requests.get(f"{BASE_URL}/api/v1/users")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        data = response.json()
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {data.get('count', 0)}")
        if data.get('users'):
            for user in data['users']:
                print(f"   - {user['first_name']} {user['last_name']} (ID: {user['id']}, —Ä–æ–ª—å: {user['role']})")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 7. –°–æ–∑–¥–∞–Ω–∏–µ —Å–º–µ–Ω—ã
    print("\n7Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Å–º–µ–Ω—ã:")
    shift_data = {
        "user_id": 2,
        "object_id": 2,
        "start_time": "2025-01-20T14:00:00",
        "status": "active",
        "start_coordinates": "55.7558,37.6176",
        "hourly_rate": 750.00,
        "notes": "–¢–µ—Å—Ç–æ–≤–∞—è —Å–º–µ–Ω–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞"
    }
    
    try:
        response = requests.post(f"{BASE_URL}/api/v1/shifts", json=shift_data)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 8. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–º–µ–Ω
    print("\n8Ô∏è‚É£ –°–ø–∏—Å–æ–∫ —Å–º–µ–Ω:")
    try:
        response = requests.get(f"{BASE_URL}/api/v1/shifts")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        data = response.json()
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {data.get('count', 0)}")
        if data.get('shifts'):
            for shift in data['shifts']:
                print(f"   - –°–º–µ–Ω–∞ {shift['id']} (—Å—Ç–∞—Ç—É—Å: {shift['status']}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {shift['user_id']})")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 9. –¢–µ—Å—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ endpoint
    print("\n9Ô∏è‚É£ –¢–µ—Å—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ endpoint:")
    try:
        response = requests.get(f"{BASE_URL}/api/v1/nonexistent")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n‚úÖ –†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_manual()
