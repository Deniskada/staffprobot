#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è API —Å –∑–∞–≥–ª—É—à–∫–∞–º–∏
"""

import requests
import json
import time

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "http://localhost:8000"

def test_health():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç health check endpoint."""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º health check...")
    try:
        response = requests.get(f"{BASE_URL}/health")
        print(f"‚úÖ Health check: {response.status_code}")
        print(f"üìä –û—Ç–≤–µ—Ç: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ health check: {e}")
        return False

def test_root():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ—Ä–Ω–µ–≤–æ–π endpoint."""
    print("\nüè† –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π endpoint...")
    try:
        response = requests.get(f"{BASE_URL}/")
        print(f"‚úÖ Root endpoint: {response.status_code}")
        print(f"üìä –û—Ç–≤–µ—Ç: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ root endpoint: {e}")
        return False

def test_get_objects():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤."""
    print("\nüìã –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤...")
    try:
        response = requests.get(f"{BASE_URL}/api/v1/objects")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤: {response.status_code}")
        data = response.json()
        print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤: {data.get('count', 0)}")
        print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message', 'N/A')}")
        if data.get('objects'):
            for obj in data['objects']:
                print(f"  - {obj['name']} (ID: {obj['id']})")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤: {e}")
        return False

def test_get_object_by_id():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø–æ ID."""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø–æ ID...")
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—ä–µ–∫—Ç
        response = requests.get(f"{BASE_URL}/api/v1/objects/1")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ 1: {response.status_code}")
        data = response.json()
        print(f"üìä –û–±—ä–µ–∫—Ç: {data.get('name', 'N/A')} (ID: {data.get('id', 'N/A')})")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—ä–µ–∫—Ç
        response = requests.get(f"{BASE_URL}/api/v1/objects/999")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ 999: {response.status_code}")
        data = response.json()
        print(f"üìä –û—à–∏–±–∫–∞: {data.get('message', 'N/A')}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –ø–æ ID: {e}")
        return False

def test_get_users():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    print("\nüë• –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    try:
        response = requests.get(f"{BASE_URL}/api/v1/users")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {response.status_code}")
        data = response.json()
        print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {data.get('count', 0)}")
        print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message', 'N/A')}")
        if data.get('users'):
            for user in data['users']:
                print(f"  - {user['first_name']} {user['last_name']} (ID: {user['id']})")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return False

def test_get_user_by_id():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID."""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID...")
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        response = requests.get(f"{BASE_URL}/api/v1/users/1")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1: {response.status_code}")
        data = response.json()
        print(f"üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {data.get('first_name', 'N/A')} {data.get('last_name', 'N/A')} (ID: {data.get('id', 'N/A')})")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        response = requests.get(f"{BASE_URL}/api/v1/users/999")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 999: {response.status_code}")
        data = response.json()
        print(f"üìä –û—à–∏–±–∫–∞: {data.get('message', 'N/A')}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID: {e}")
        return False

def test_get_shifts():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–º–µ–Ω."""
    print("\n‚è∞ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–º–µ–Ω...")
    try:
        response = requests.get(f"{BASE_URL}/api/v1/shifts")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–º–µ–Ω: {response.status_code}")
        data = response.json()
        print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–µ–Ω: {data.get('count', 0)}")
        print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message', 'N/A')}")
        if data.get('shifts'):
            for shift in data['shifts']:
                print(f"  - –°–º–µ–Ω–∞ {shift['id']} (—Å—Ç–∞—Ç—É—Å: {shift['status']})")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–º–µ–Ω: {e}")
        return False

def test_create_object():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞."""
    print("\nüè¢ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞...")
    object_data = {
        "name": "–ù–æ–≤—ã–π –æ–±—ä–µ–∫—Ç",
        "owner_id": 1,
        "address": "—É–ª. –ù–æ–≤–∞—è, 2",
        "coordinates": "55.7558,37.6176",
        "opening_time": "08:00:00",
        "closing_time": "20:00:00",
        "hourly_rate": 600.00,
        "required_employees": "–û—Ö—Ä–∞–Ω–Ω–∏–∫",
        "is_active": True
    }
    
    try:
        response = requests.post(f"{BASE_URL}/api/v1/objects", json=object_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞: {response.status_code}")
        data = response.json()
        print(f"üìä –û—Ç–≤–µ—Ç: {data}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞: {e}")
        return False

def test_create_user():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    print("\nüë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    user_data = {
        "telegram_id": 987654321,
        "username": "new_user",
        "first_name": "–ù–æ–≤—ã–π",
        "last_name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "phone": "+79009876543",
        "role": "manager",
        "is_active": True
    }
    
    try:
        response = requests.post(f"{BASE_URL}/api/v1/users", json=user_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {response.status_code}")
        data = response.json()
        print(f"üìä –û—Ç–≤–µ—Ç: {data}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return False

def test_create_shift():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Å–º–µ–Ω—ã."""
    print("\n‚è∞ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–º–µ–Ω—ã...")
    from datetime import datetime
    
    shift_data = {
        "user_id": 1,
        "object_id": 1,
        "start_time": datetime.now().isoformat(),
        "status": "active",
        "start_coordinates": "55.7558,37.6176",
        "hourly_rate": 500.00,
        "notes": "–¢–µ—Å—Ç–æ–≤–∞—è —Å–º–µ–Ω–∞"
    }
    
    try:
        response = requests.post(f"{BASE_URL}/api/v1/shifts", json=shift_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Å–º–µ–Ω—ã: {response.status_code}")
        data = response.json()
        print(f"üìä –û—Ç–≤–µ—Ç: {data}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–º–µ–Ω—ã: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å –∑–∞–≥–ª—É—à–∫–∞–º–∏...")
    print(f"üìç API URL: {BASE_URL}")
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã API —É—Å–ø–µ–ª –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    print("‚è≥ –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ API...")
    time.sleep(3)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º health check
    if not test_health():
        print("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π endpoint
    test_root()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º GET endpoints
    test_get_objects()
    test_get_object_by_id()
    test_get_users()
    test_get_user_by_id()
    test_get_shifts()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º POST endpoints
    test_create_object()
    test_create_user()
    test_create_shift()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –í—Å–µ –¥–∞–Ω–Ω—ã–µ —è–≤–ª—è—é—Ç—Å—è –∑–∞–≥–ª—É—à–∫–∞–º–∏, –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

if __name__ == "__main__":
    main()
