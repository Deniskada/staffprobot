#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL –¥–ª—è StaffProBot

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] ‚úÖ${NC} $1"
}

warning() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] ‚ö†Ô∏è${NC} $1"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ‚ùå${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -lt 2 ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <domain> <email> [options]"
    echo ""
    echo "–ê—Ä–≥—É–º–µ–Ω—Ç—ã:"
    echo "  domain    - –¥–æ–º–µ–Ω –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL (–Ω–∞–ø—Ä–∏–º–µ—Ä: example.com)"
    echo "  email     - email –¥–ª—è Let's Encrypt (–Ω–∞–ø—Ä–∏–º–µ—Ä: admin@example.com)"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  --force   - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ (–ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã)"
    echo "  --dry-run - —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    echo "  --help    - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 example.com admin@example.com"
    echo "  $0 example.com admin@example.com --force"
    echo "  $0 example.com admin@example.com --dry-run"
    exit 1
fi

DOMAIN=$1
EMAIL=$2
FORCE=false
DRY_RUN=false

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø—Ü–∏–π
while [[ $# -gt 2 ]]; do
    case $3 in
        --force)
            FORCE=true
            shift
            ;;
        --dry-run)
            DRY_RUN=true
            shift
            ;;
        --help)
            echo "–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–∫—Ä–∏–ø—Ç–∞ setup-domain-ssl.sh"
            exit 0
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $3"
            exit 1
            ;;
    esac
done

log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É SSL –¥–ª—è –¥–æ–º–µ–Ω–∞: $DOMAIN"
log "üìß Email –¥–ª—è Let's Encrypt: $EMAIL"

if [ "$DRY_RUN" = true ]; then
    warning "üîç –†–µ–∂–∏–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ - –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
fi

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ root
check_root() {
    if [ "$EUID" -ne 0 ]; then
        error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root"
        error "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: sudo $0 $*"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    
    local missing_deps=()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º nginx
    if ! command -v nginx &> /dev/null; then
        missing_deps+=("nginx")
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º certbot
    if ! command -v certbot &> /dev/null; then
        missing_deps+=("certbot")
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º openssl
    if ! command -v openssl &> /dev/null; then
        missing_deps+=("openssl")
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º curl
    if ! command -v curl &> /dev/null; then
        missing_deps+=("curl")
    fi
    
    if [ ${#missing_deps[@]} -ne 0 ]; then
        error "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${missing_deps[*]}"
        log "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö —Å –ø–æ–º–æ—â—å—é:"
        log "  apt update && apt install -y ${missing_deps[*]}"
        exit 1
    fi
    
    success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ DNS
check_dns() {
    log "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥ –¥–ª—è –¥–æ–º–µ–Ω–∞: $DOMAIN"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω
    if ! nslookup "$DOMAIN" > /dev/null 2>&1; then
        error "DNS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –¥–æ–º–µ–Ω–∞ $DOMAIN"
        error "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–æ–º–µ–Ω —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º www –ø–æ–¥–¥–æ–º–µ–Ω
    if ! nslookup "www.$DOMAIN" > /dev/null 2>&1; then
        warning "DNS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è www.$DOMAIN (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–æ–º–µ–Ω—ã
    local subdomains=("api" "admin" "bot")
    for subdomain in "${subdomains[@]}"; do
        if ! nslookup "$subdomain.$DOMAIN" > /dev/null 2>&1; then
            warning "DNS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è $subdomain.$DOMAIN (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
        fi
    done
    
    success "DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è $DOMAIN"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤
check_ports() {
    log "üîå –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—Ä—Ç—ã 80 –∏ 443 —Å–≤–æ–±–æ–¥–Ω—ã
    if netstat -tuln | grep -q ":80 "; then
        warning "–ü–æ—Ä—Ç 80 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
    fi
    
    if netstat -tuln | grep -q ":443 "; then
        warning "–ü–æ—Ä—Ç 443 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
    fi
    
    success "–ü–æ—Ä—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ nginx
stop_nginx() {
    log "‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx..."
    
    if systemctl is-active --quiet nginx; then
        if [ "$DRY_RUN" = false ]; then
            systemctl stop nginx
            sleep 2
        fi
        success "nginx –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log "nginx —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ nginx
start_nginx() {
    log "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º nginx..."
    
    if [ "$DRY_RUN" = false ]; then
        systemctl start nginx
        sleep 2
        
        if systemctl is-active --quiet nginx; then
            success "nginx –∑–∞–ø—É—â–µ–Ω"
        else
            error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å nginx"
            return 1
        fi
    else
        log "nginx –±—ã–ª –±—ã –∑–∞–ø—É—â–µ–Ω (dry-run)"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
obtain_certificates() {
    log "üîê –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —á–µ—Ä–µ–∑ Let's Encrypt..."
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤
    local domains=("$DOMAIN")
    if ! nslookup "www.$DOMAIN" > /dev/null 2>&1; then
        domains+=("www.$DOMAIN")
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–æ–º–µ–Ω—ã –µ—Å–ª–∏ –æ–Ω–∏ —Ä–µ–∑–æ–ª–≤—è—Ç—Å—è
    local subdomains=("api" "admin" "bot")
    for subdomain in "${subdomains[@]}"; do
        if nslookup "$subdomain.$DOMAIN" > /dev/null 2>&1; then
            domains+=("$subdomain.$DOMAIN")
        fi
    done
    
    log "–î–æ–º–µ–Ω—ã –¥–ª—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: ${domains[*]}"
    
    if [ "$DRY_RUN" = false ]; then
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É certbot
        local certbot_cmd=(
            "certbot" "certonly"
            "--standalone"
            "--email" "$EMAIL"
            "--agree-tos"
            "--no-eff-email"
            "--domains" "$(IFS=,; echo "${domains[*]}")"
            "--non-interactive"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º --force-renewal –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if [ "$FORCE" = true ]; then
            certbot_cmd+=("--force-renewal")
        fi
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
        if "${certbot_cmd[@]}"; then
            success "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã"
        else
            error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"
            return 1
        fi
    else
        log "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –±—ã–ª–∏ –±—ã –ø–æ–ª—É—á–µ–Ω—ã (dry-run)"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
verify_certificates() {
    log "‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã..."
    
    local cert_path="/etc/letsencrypt/live/$DOMAIN/fullchain.pem"
    local key_path="/etc/letsencrypt/live/$DOMAIN/privkey.pem"
    
    if [ ! -f "$cert_path" ] || [ ! -f "$key_path" ]; then
        error "–§–∞–π–ª—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    if openssl x509 -in "$cert_path" -noout -checkend 0 > /dev/null 2>&1; then
        success "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤–∞–ª–∏–¥–µ–Ω"
    else
        error "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ–≤–∞–ª–∏–¥–µ–Ω"
        return 1
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ
    local cert_info=$(openssl x509 -in "$cert_path" -noout -text | grep -E "(Subject:|Issuer:|Not Before:|Not After:)")
    log "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ:"
    echo "$cert_info" | while read -r line; do
        log "  $line"
    done
    
    success "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ nginx
configure_nginx() {
    log "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º nginx..."
    
    local nginx_config="/etc/nginx/sites-available/staffprobot-$DOMAIN.conf"
    local nginx_enabled="/etc/nginx/sites-enabled/staffprobot-$DOMAIN.conf"
    
    if [ "$DRY_RUN" = false ]; then
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
        cat > "$nginx_config" << EOF
# Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è $DOMAIN
# –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ $(date)

# –†–µ–¥–∏—Ä–µ–∫—Ç —Å HTTP –Ω–∞ HTTPS
server {
    listen 80;
    server_name $DOMAIN www.$DOMAIN;
    return 301 https://\$server_name\$request_uri;
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç
server {
    listen 443 ssl http2;
    server_name $DOMAIN www.$DOMAIN;

    # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
    
    # SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç
    location / {
        proxy_pass http://localhost:8001;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}

# API –ø–æ–¥–¥–æ–º–µ–Ω
server {
    listen 443 ssl http2;
    server_name api.$DOMAIN;

    # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
    
    # SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers –¥–ª—è API
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    add_header Access-Control-Allow-Origin "https://$DOMAIN";
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
    
    # API endpoints
    location / {
        proxy_pass http://localhost:8001;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}

# Admin –ø–æ–¥–¥–æ–º–µ–Ω
server {
    listen 443 ssl http2;
    server_name admin.$DOMAIN;

    # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
    
    # SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # –ê–¥–º–∏–Ω–∫–∞
    location / {
        proxy_pass http://localhost:8001;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}

# Bot webhook –ø–æ–¥–¥–æ–º–µ–Ω
server {
    listen 443 ssl http2;
    server_name bot.$DOMAIN;

    # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
    
    # SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    
    # Telegram webhook
    location /webhook {
        proxy_pass http://localhost:8001/webhook;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
    
    # Health check
    location /health {
        proxy_pass http://localhost:8001/health;
        access_log off;
    }
}
EOF
        
        # –í–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        ln -sf "$nginx_config" "$nginx_enabled"
        
        # –£–¥–∞–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        rm -f /etc/nginx/sites-enabled/default
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
        if nginx -t; then
            success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx —Å–æ–∑–¥–∞–Ω–∞ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"
        else
            error "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx"
            return 1
        fi
    else
        log "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx –±—ã–ª–∞ –±—ã —Å–æ–∑–¥–∞–Ω–∞ (dry-run)"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
setup_auto_renewal() {
    log "üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
    
    if [ "$DRY_RUN" = false ]; then
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ crontab
        local cron_job="0 12 * * * /usr/bin/certbot renew --quiet --post-hook 'systemctl reload nginx'"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –∑–∞–¥–∞—á–∞
        if ! crontab -l 2>/dev/null | grep -q "certbot renew"; then
            (crontab -l 2>/dev/null; echo "$cron_job") | crontab -
            success "–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
        else
            log "–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
        fi
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        if certbot renew --dry-run; then
            success "–¢–µ—Å—Ç –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ"
        else
            warning "–¢–µ—Å—Ç –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –ø—Ä–æ—à–µ–ª"
        fi
    else
        log "–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±—ã–ª–æ –±—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ (dry-run)"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
final_check() {
    log "üîç –í—ã–ø–æ–ª–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ nginx —Ä–∞–±–æ—Ç–∞–µ—Ç
    if systemctl is-active --quiet nginx; then
        success "nginx —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "nginx –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞
    if curl -s -f "https://$DOMAIN" > /dev/null; then
        success "–°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTPS: https://$DOMAIN"
    else
        warning "–°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTPS (–≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ)"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    if curl -s -f "https://api.$DOMAIN" > /dev/null; then
        success "API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTPS: https://api.$DOMAIN"
    else
        warning "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTPS"
    fi
    
    success "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É SSL –¥–ª—è StaffProBot"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ —à–∞–≥–∏
    check_root
    check_dependencies
    check_dns
    check_ports
    stop_nginx
    obtain_certificates
    verify_certificates
    configure_nginx
    start_nginx
    setup_auto_renewal
    final_check
    
    success "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    log ""
    log "üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:"
    log "  ‚úÖ –ü–æ–ª—É—á–µ–Ω—ã SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ—Ç Let's Encrypt"
    log "  ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω nginx —Å HTTPS"
    log "  ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"
    log "  ‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å"
    log ""
    log "üåê –í–∞—à —Å–∞–π—Ç —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:"
    log "  ‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç: https://$DOMAIN"
    log "  ‚Ä¢ API: https://api.$DOMAIN"
    log "  ‚Ä¢ –ê–¥–º–∏–Ω–∫–∞: https://admin.$DOMAIN"
    log "  ‚Ä¢ Webhook: https://bot.$DOMAIN"
    log ""
    log "üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ StaffProBot:"
    log "  ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–æ–º–µ–Ω: $DOMAIN"
    log "  ‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ HTTPS"
    log "  ‚Ä¢ –û–±–Ω–æ–≤–∏—Ç–µ webhook URL –≤ Telegram –±–æ—Ç–µ"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
