#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è staffprobot.ru

set -e

DOMAIN="staffprobot.ru"
USER="staffprobot"
PROJECT_DIR="/opt/staffprobot"

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è $DOMAIN"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root: sudo $0"
    exit 1
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
apt update && apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
apt install -y \
    curl \
    wget \
    git \
    unzip \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    gnupg \
    lsb-release \
    ufw \
    fail2ban \
    htop \
    nano \
    vim

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
echo "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
apt update
apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
echo "üêô –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–µ–ø–ª–æ—è
echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $USER..."
if ! id "$USER" &>/dev/null; then
    echo "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $USER..."
    useradd -m -s /bin/bash $USER
    usermod -aG docker $USER
    usermod -aG sudo $USER
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $USER —Å–æ–∑–¥–∞–Ω"
else
    echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $USER —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –≥—Ä—É–ø–ø—ã..."
    usermod -aG docker $USER
    usermod -aG sudo $USER
    echo "‚úÖ –ì—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $USER –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞..."
if [ ! -d "$PROJECT_DIR" ]; then
    echo "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $PROJECT_DIR..."
    mkdir -p $PROJECT_DIR
    chown $USER:$USER $PROJECT_DIR
    echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $PROJECT_DIR —Å–æ–∑–¥–∞–Ω–∞"
else
    echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $PROJECT_DIR —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∞–≤–∞..."
    chown $USER:$USER $PROJECT_DIR
    echo "‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é $PROJECT_DIR –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH
echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH..."
sed -i 's/#PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
systemctl restart sshd

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall
echo "üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall..."
ufw default deny incoming
ufw default allow outgoing
ufw allow ssh
ufw allow 80/tcp
ufw allow 443/tcp
ufw --force enable

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ fail2ban
echo "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ fail2ban..."
cat > /etc/fail2ban/jail.local << EOF
[DEFAULT]
bantime = 3600
findtime = 600
maxretry = 3

[sshd]
enabled = true
port = ssh
logpath = /var/log/auth.log
maxretry = 3
EOF

systemctl enable fail2ban
systemctl start fail2ban

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nginx
echo "üåê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nginx..."
apt install -y nginx

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤..."
cat >> /etc/security/limits.conf << EOF
* soft nofile 65536
* hard nofile 65536
* soft nproc 65536
* hard nproc 65536
EOF

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ sysctl
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ sysctl..."
cat >> /etc/sysctl.conf << EOF
# Network optimizations
net.core.somaxconn = 65535
net.core.netdev_max_backlog = 5000
net.ipv4.tcp_max_syn_backlog = 65535
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_keepalive_intvl = 60
net.ipv4.tcp_keepalive_probes = 10
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_max_tw_buckets = 2000000
net.ipv4.tcp_congestion_control = bbr
EOF

sysctl -p

# –°–æ–∑–¥–∞–Ω–∏–µ swap —Ñ–∞–π–ª–∞
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ swap —Ñ–∞–π–ª–∞..."
if [ ! -f /swapfile ]; then
    echo "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ swap —Ñ–∞–π–ª–∞..."
    fallocate -l 2G /swapfile
    chmod 600 /swapfile
    mkswap /swapfile
    swapon /swapfile
    if ! grep -q '/swapfile' /etc/fstab; then
        echo '/swapfile none swap sw 0 0' >> /etc/fstab
        echo "‚úÖ –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ /etc/fstab"
    else
        echo "‚úÖ –ó–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ /etc/fstab"
    fi
    echo "‚úÖ Swap —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
else
    echo "Swap —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
    if ! swapon --show | grep -q /swapfile; then
        echo "–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π swap —Ñ–∞–π–ª..."
        swapon /swapfile
    else
        echo "‚úÖ Swap —Ñ–∞–π–ª —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω"
    fi
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
echo "üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è..."
mkdir -p /var/log/staffprobot
chown $USER:$USER /var/log/staffprobot

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
echo "üîç –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
cat > /etc/systemd/system/staffprobot-monitor.service << EOF
[Unit]
Description=StaffProBot Monitoring
After=docker.service
Requires=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=$PROJECT_DIR
ExecStart=/usr/local/bin/docker-compose -f docker-compose.prod.yml up -d
ExecStop=/usr/local/bin/docker-compose -f docker-compose.prod.yml down
User=$USER
Group=$USER

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable staffprobot-monitor

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–µ–ø–ª–æ—è
echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–µ–ø–ª–æ—è..."
cat > $PROJECT_DIR/deploy.sh << 'EOF'
#!/bin/bash
set -e

echo "üöÄ Deploying StaffProBot..."

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /opt/staffprobot

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
git pull origin main

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
docker-compose -f docker-compose.prod.yml down
docker-compose -f docker-compose.prod.yml build --no-cache
docker-compose -f docker-compose.prod.yml up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
if [ -x "$PROJECT_DIR/scripts/health-check.sh" ]; then
    ./scripts/health-check.sh
else
    echo "‚ö†Ô∏è health-check.sh –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–¥–æ—Ä–æ–≤—å—è –Ω–∞ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ"
fi

echo "‚úÖ Deployment completed!"
EOF

chmod +x $PROJECT_DIR/deploy.sh
chown $USER:$USER $PROJECT_DIR/deploy.sh

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
echo "üè• –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è..."
mkdir -p $PROJECT_DIR/scripts
cat > $PROJECT_DIR/scripts/health-check.sh << 'EOF'
#!/bin/bash

echo "üè• Checking service health..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
if ! docker-compose -f docker-compose.prod.yml ps | grep -q "Up"; then
    echo "‚ùå Some containers are not running"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP endpoints
if ! curl -f -s https://staffprobot.ru/health > /dev/null; then
    echo "‚ùå Main site is not responding"
    exit 1
fi

if ! curl -f -s https://api.staffprobot.ru/health > /dev/null; then
    echo "‚ùå API is not responding"
    exit 1
fi

echo "‚úÖ All services are healthy"
EOF

chmod +x $PROJECT_DIR/scripts/health-check.sh
chown $USER:$USER $PROJECT_DIR/scripts/health-check.sh

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p $PROJECT_DIR/logs
chown $USER:$USER $PROJECT_DIR/logs

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤
echo "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤..."
cat > /etc/logrotate.d/staffprobot << EOF
$PROJECT_DIR/logs/*.log {
    daily
    missingok
    rotate 30
    compress
    delaycompress
    notifempty
    create 644 $USER $USER
    postrotate
        systemctl reload nginx
    endscript
}
EOF

echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ SSH –∫–ª—é—á –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $USER"
echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo -u $USER git clone <repository> $PROJECT_DIR"
echo "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS –∑–∞–ø–∏—Å–∏ –¥–ª—è $DOMAIN"
echo "4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo ./deployment/scripts/setup-ssl.sh"
echo "5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo -u $USER $PROJECT_DIR/deploy.sh"
echo ""
echo "üåê –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://$DOMAIN"
