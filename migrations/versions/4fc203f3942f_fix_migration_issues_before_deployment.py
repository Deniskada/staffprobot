"""fix_migration_issues_before_deployment

Revision ID: 4fc203f3942f
Revises: fix_user_role_defaults
Create Date: 2025-09-21 08:25:28.305405

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4fc203f3942f'
down_revision: Union[str, Sequence[str], None] = 'fix_user_role_defaults'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # НЕ удаляем spatial_ref_sys - это системная таблица PostGIS!
    # op.drop_table('spatial_ref_sys')
    
    # Исправляем индекс contract_number
    op.drop_constraint('contracts_contract_number_key', 'contracts', type_='unique')
    op.drop_index('ix_contracts_contract_number', table_name='contracts')
    op.create_index(op.f('ix_contracts_contract_number'), 'contracts', ['contract_number'], unique=True)
    
    # Добавляем недостающие индексы для time_slots
    op.create_index(op.f('ix_time_slots_id'), 'time_slots', ['id'], unique=False)
    op.create_index(op.f('ix_time_slots_slot_date'), 'time_slots', ['slot_date'], unique=False)
    
    # НЕ меняем тип users.roles - оставляем JSONB
    # op.alter_column('users', 'roles',
    #            existing_type=postgresql.JSONB(astext_type=sa.Text()),
    #            type_=sa.JSON(),
    #            existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # НЕ меняем тип users.roles - оставляем JSONB
    # op.alter_column('users', 'roles',
    #            existing_type=sa.JSON(),
    #            type_=postgresql.JSONB(astext_type=sa.Text()),
    #            existing_nullable=False)
    
    # Удаляем добавленные индексы
    op.drop_index(op.f('ix_time_slots_slot_date'), table_name='time_slots')
    op.drop_index(op.f('ix_time_slots_id'), table_name='time_slots')
    
    # Возвращаем старый индекс contract_number
    op.drop_index(op.f('ix_contracts_contract_number'), table_name='contracts')
    op.create_index('ix_contracts_contract_number', 'contracts', ['contract_number'], unique=False)
    op.create_unique_constraint('contracts_contract_number_key', 'contracts', ['contract_number'])
    
    # НЕ создаем spatial_ref_sys - это системная таблица PostGIS!
    # op.create_table('spatial_ref_sys',
    # sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    # sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    # sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    # )
    # ### end Alembic commands ###
