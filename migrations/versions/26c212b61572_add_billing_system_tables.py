"""add_billing_system_tables

Revision ID: 26c212b61572
Revises: 18f7c5cb8e68
Create Date: 2025-09-27 17:47:49.948227

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '26c212b61572'
down_revision: Union[str, Sequence[str], None] = '18f7c5cb8e68'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('billing_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=True),
    sa.Column('transaction_type', sa.Enum('PAYMENT', 'REFUND', 'CREDIT', 'DEBIT', 'ADJUSTMENT', name='transactiontype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', 'REFUNDED', name='transactionstatus'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('payment_method', sa.Enum('CARD', 'BANK_TRANSFER', 'CASH', 'MANUAL', 'STRIPE', 'YOOKASSA', name='paymentmethod'), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('external_id', sa.String(length=100), nullable=True),
    sa.Column('gateway_response', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['user_subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id')
    )
    op.create_index(op.f('ix_billing_transactions_id'), 'billing_transactions', ['id'], unique=False)
    op.create_index(op.f('ix_billing_transactions_subscription_id'), 'billing_transactions', ['subscription_id'], unique=False)
    op.create_index(op.f('ix_billing_transactions_user_id'), 'billing_transactions', ['user_id'], unique=False)
    op.create_table('usage_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('max_objects', sa.Integer(), nullable=False),
    sa.Column('max_employees', sa.Integer(), nullable=False),
    sa.Column('max_managers', sa.Integer(), nullable=False),
    sa.Column('current_objects', sa.Integer(), nullable=False),
    sa.Column('current_employees', sa.Integer(), nullable=False),
    sa.Column('current_managers', sa.Integer(), nullable=False),
    sa.Column('total_shifts', sa.Integer(), nullable=False),
    sa.Column('active_contracts', sa.Integer(), nullable=False),
    sa.Column('api_requests_count', sa.Integer(), nullable=False),
    sa.Column('storage_used_mb', sa.Integer(), nullable=False),
    sa.Column('detailed_usage', sa.JSON(), nullable=True),
    sa.Column('period_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('period_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['user_subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usage_metrics_id'), 'usage_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_usage_metrics_subscription_id'), 'usage_metrics', ['subscription_id'], unique=False)
    op.create_index(op.f('ix_usage_metrics_user_id'), 'usage_metrics', ['user_id'], unique=False)
    op.create_table('payment_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('notification_type', sa.Enum('PAYMENT_DUE', 'PAYMENT_SUCCESS', 'PAYMENT_FAILED', 'SUBSCRIPTION_EXPIRING', 'SUBSCRIPTION_EXPIRED', 'USAGE_LIMIT_WARNING', 'USAGE_LIMIT_EXCEEDED', name='notificationtype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SENT', 'DELIVERED', 'FAILED', 'READ', name='notificationstatus'), nullable=False),
    sa.Column('channel', sa.Enum('EMAIL', 'TELEGRAM', 'SMS', 'WEBHOOK', 'IN_APP', name='notificationchannel'), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('notification_data', sa.Text(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['user_subscriptions.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['billing_transactions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_notifications_id'), 'payment_notifications', ['id'], unique=False)
    op.create_index(op.f('ix_payment_notifications_subscription_id'), 'payment_notifications', ['subscription_id'], unique=False)
    op.create_index(op.f('ix_payment_notifications_transaction_id'), 'payment_notifications', ['transaction_id'], unique=False)
    op.create_index(op.f('ix_payment_notifications_user_id'), 'payment_notifications', ['user_id'], unique=False)
    # Удаляем только таблицу notifications, spatial_ref_sys не трогаем (системная таблица PostGIS)
    op.drop_index('ix_notifications_user_id_is_read', table_name='notifications')
    op.drop_table('notifications')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('payload', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('read_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(length=32), server_default=sa.text("'system'::character varying"), autoincrement=False, nullable=False),
    sa.Column('channel', sa.VARCHAR(length=32), server_default=sa.text("'web'::character varying"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='notifications_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    op.create_index('ix_notifications_user_id_is_read', 'notifications', ['user_id', 'is_read'], unique=False)
    # Не создаем spatial_ref_sys обратно - это системная таблица PostGIS
    op.drop_index(op.f('ix_payment_notifications_user_id'), table_name='payment_notifications')
    op.drop_index(op.f('ix_payment_notifications_transaction_id'), table_name='payment_notifications')
    op.drop_index(op.f('ix_payment_notifications_subscription_id'), table_name='payment_notifications')
    op.drop_index(op.f('ix_payment_notifications_id'), table_name='payment_notifications')
    op.drop_table('payment_notifications')
    op.drop_index(op.f('ix_usage_metrics_user_id'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_subscription_id'), table_name='usage_metrics')
    op.drop_index(op.f('ix_usage_metrics_id'), table_name='usage_metrics')
    op.drop_table('usage_metrics')
    op.drop_index(op.f('ix_billing_transactions_user_id'), table_name='billing_transactions')
    op.drop_index(op.f('ix_billing_transactions_subscription_id'), table_name='billing_transactions')
    op.drop_index(op.f('ix_billing_transactions_id'), table_name='billing_transactions')
    op.drop_table('billing_transactions')
    # ### end Alembic commands ###
