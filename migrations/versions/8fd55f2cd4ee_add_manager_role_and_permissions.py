"""add_manager_role_and_permissions

Revision ID: 8fd55f2cd4ee
Revises: merge_20250918_end
Create Date: 2025-09-20 08:36:44.692047

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8fd55f2cd4ee'
down_revision: Union[str, Sequence[str], None] = 'merge_20250918_end'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Добавляем поля для управляющих в таблицу contracts
    op.add_column('contracts', sa.Column('is_manager', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('contracts', sa.Column('manager_permissions', sa.JSON(), nullable=True))
    
    # Создаем таблицу прав управляющего на объекты
    op.create_table('manager_object_permissions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('contract_id', sa.Integer(), nullable=False),
        sa.Column('object_id', sa.Integer(), nullable=False),
        sa.Column('can_view', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('can_edit', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('can_delete', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('can_manage_employees', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('can_view_finances', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('can_edit_rates', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('can_edit_schedule', sa.Boolean(), nullable=False, server_default='false'),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['contract_id'], ['contracts.id'], ),
        sa.ForeignKeyConstraint(['object_id'], ['objects.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_manager_object_permissions_id'), 'manager_object_permissions', ['id'], unique=False)
    op.create_index(op.f('ix_manager_object_permissions_contract_id'), 'manager_object_permissions', ['contract_id'], unique=False)
    op.create_index(op.f('ix_manager_object_permissions_object_id'), 'manager_object_permissions', ['object_id'], unique=False)
    
    # Добавляем роль MANAGER в enum (если нужно)
    # op.execute("ALTER TYPE userrole ADD VALUE 'manager'")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Удаляем таблицу прав управляющего
    op.drop_index(op.f('ix_manager_object_permissions_object_id'), table_name='manager_object_permissions')
    op.drop_index(op.f('ix_manager_object_permissions_contract_id'), table_name='manager_object_permissions')
    op.drop_index(op.f('ix_manager_object_permissions_id'), table_name='manager_object_permissions')
    op.drop_table('manager_object_permissions')
    
    # Удаляем поля для управляющих из таблицы contracts
    op.drop_column('contracts', 'manager_permissions')
    op.drop_column('contracts', 'is_manager')
    
    # ### end Alembic commands ###
