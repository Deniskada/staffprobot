version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: staffprobot_postgres_dev
    environment:
      POSTGRES_DB: staffprobot_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d staffprobot_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - staffprobot_dev_network

  redis:
    image: redis:7-alpine
    container_name: staffprobot_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - staffprobot_dev_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: staffprobot_rabbitmq_dev
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_dev_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - staffprobot_dev_network

  bot:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: staffprobot_bot_dev
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/staffprobot_dev
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - ENVIRONMENT=development
      - DEBUG=true
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
    ports:
      - "8000:8000"
    networks:
      - staffprobot_dev_network
    command: ["python", "main.py"]
    stdin_open: true
    tty: true

  celery_worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: staffprobot_celery_worker_dev
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/staffprobot_dev
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - ENVIRONMENT=development
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
    networks:
      - staffprobot_dev_network
    command: ["python", "scripts/start_celery_worker.py"]

  celery_beat:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: staffprobot_celery_beat_dev
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/staffprobot_dev
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - ENVIRONMENT=development
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - celery_beat_dev_data:/tmp
    networks:
      - staffprobot_dev_network
    command: ["python", "scripts/start_celery_beat.py"]

  web:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: staffprobot_web_dev
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/staffprobot_dev
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - ENVIRONMENT=development
      - DEBUG=true
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - SECRET_KEY=dev-secret-key-change-in-production
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
    ports:
      - "8001:8001"
    networks:
      - staffprobot_dev_network
    command: ["python", "-m", "uvicorn", "apps.web.app:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]
    stdin_open: true
    tty: true

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  rabbitmq_dev_data:
    driver: local
  celery_beat_dev_data:
    driver: local

networks:
  staffprobot_dev_network:
    driver: bridge
    name: staffprobot_dev_network

